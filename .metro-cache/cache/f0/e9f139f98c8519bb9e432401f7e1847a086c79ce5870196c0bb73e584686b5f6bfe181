{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/arrayLikeToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"GXS4FldiTeP8Bh/xxdQ590oUdm0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA=","exportNames":["*"],"imports":1}},{"name":"../../../../common","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":53,"index":67}}],"key":"lWBwZ2gfCJqIdYPstlqcFfa1xEQ=","exportNames":["*"],"imports":1}},{"name":"../../../easing","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":140},"end":{"line":4,"column":61,"index":201}}],"key":"+80dbmARANnOtOhvA2f1J11PAto=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":306},"end":{"line":18,"column":24,"index":515}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"createEmptyTransitionConfig\", {\n    enumerable: true,\n    get: function () {\n      return createEmptyTransitionConfig;\n    }\n  });\n  exports.parseTransitionShorthand = parseTransitionShorthand;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersArrayLikeToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/arrayLikeToArray\");\n  var _arrayLikeToArray = _interopDefault(_babelRuntimeHelpersArrayLikeToArray);\n  var _babelRuntimeHelpersToArray = require(_dependencyMap[2], \"@babel/runtime/helpers/toArray\");\n  var _toArray = _interopDefault(_babelRuntimeHelpersToArray);\n  var _common = require(_dependencyMap[3], \"../../../../common\");\n  var _easing = require(_dependencyMap[4], \"../../../easing\");\n  var _utils = require(_dependencyMap[5], \"../../../utils\");\n  var createEmptyTransitionConfig = () => ({\n    transitionProperty: [],\n    transitionDuration: [],\n    transitionTimingFunction: [],\n    transitionDelay: [],\n    transitionBehavior: []\n  });\n  function parseTransitionShorthand(value) {\n    return (0, _utils.splitByComma)(value).reduce((acc, part) => {\n      var result = (0, _utils.parseSingleTransitionShorthand)(part);\n      acc.transitionProperty.push((0, _utils.camelizeKebabCase)(result.transitionProperty ?? 'all'));\n      acc.transitionDuration.push(result.transitionDuration);\n      acc.transitionTimingFunction.push(result.transitionTimingFunction ? parseTimingFunction(result.transitionTimingFunction) : undefined);\n      acc.transitionDelay.push(result.transitionDelay);\n      acc.transitionBehavior.push(result.transitionBehavior);\n      return acc;\n    }, createEmptyTransitionConfig());\n  }\n  function asControlPoint(value) {\n    var _value = (0, _toArray.default)(value),\n      first = _value[0],\n      rest = (0, _arrayLikeToArray.default)(_value).slice(1);\n    if (!first || isNaN(Number(first)) || !rest.every(_utils.isPercentage)) {\n      return null;\n    }\n    return [Number(first), ...rest];\n  }\n  function parseTimingFunction(value) {\n    if ((0, _utils.isPredefinedTimingFunction)(value)) {\n      return value;\n    }\n\n    // TODO: implement more strict check\n    var regex = /^(.+)\\((.+)\\)$/;\n    if (!regex.test(value)) {\n      throw new _common.ReanimatedError(`Unsupported timing function: ${value}`);\n    }\n    var _ref = value.match(regex),\n      _ref2 = (0, _slicedToArray.default)(_ref, 3),\n      name = _ref2[1],\n      args = _ref2[2];\n    var parsedArgs = (0, _utils.splitByComma)(args);\n    switch (name) {\n      case 'cubic-bezier':\n        {\n          var numberArgs = parsedArgs.map(Number);\n          if ((0, _utils.isArrayOfLength)(numberArgs, 4) && numberArgs.every(n => !isNaN(n))) {\n            return (0, _easing.cubicBezier)(...numberArgs);\n          }\n          break;\n        }\n      case 'linear':\n        {\n          var controlPoints = parsedArgs.map(arg => {\n            var parts = (0, _utils.splitByWhitespace)(arg);\n            var controlPoint = asControlPoint(parts);\n            if (!controlPoint) {\n              throw new _common.ReanimatedError(`Invalid control point: ${arg} in ${value} timing function`);\n            }\n            return controlPoint;\n          });\n          return (0, _easing.linear)(...controlPoints);\n        }\n      case 'steps':\n        {\n          var stepsNumber = Number(parsedArgs[0]);\n          var stepsModifier = parsedArgs[1];\n          if (!isNaN(stepsNumber) && stepsNumber > 0 && (stepsModifier === undefined || (0, _utils.isStepsModifier)(stepsModifier))) {\n            return (0, _easing.steps)(stepsNumber, stepsModifier);\n          }\n          break;\n        }\n    }\n    throw new _common.ReanimatedError(`Invalid timing function: ${value}`);\n  }\n});","lineCount":103,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,28,0,"Object"],[12,8,28,0],[12,9,28,0,"defineProperty"],[12,23,28,0],[12,24,28,0,"exports"],[12,31,28,0],[13,4,28,0,"enumerable"],[13,14,28,0],[14,4,28,0,"get"],[14,7,28,0],[14,18,28,0,"get"],[14,19,28,0],[15,6,28,0],[15,13,28,0,"createEmptyTransitionConfig"],[15,40,28,0],[16,4,28,0],[17,2,28,0],[18,2,37,0,"exports"],[18,9,37,0],[18,10,37,0,"parseTransitionShorthand"],[18,34,37,0],[18,37,37,0,"parseTransitionShorthand"],[18,61,37,0],[19,2,56,1],[19,6,56,1,"_babelRuntimeHelpersSlicedToArray"],[19,39,56,1],[19,42,56,1,"require"],[19,49,56,1],[19,50,56,1,"_dependencyMap"],[19,64,56,1],[20,2,56,1],[20,6,56,1,"_slicedToArray"],[20,20,56,1],[20,23,56,1,"_interopDefault"],[20,38,56,1],[20,39,56,1,"_babelRuntimeHelpersSlicedToArray"],[20,72,56,1],[21,2,56,1],[21,6,56,1,"_babelRuntimeHelpersArrayLikeToArray"],[21,42,56,1],[21,45,56,1,"require"],[21,52,56,1],[21,53,56,1,"_dependencyMap"],[21,67,56,1],[22,2,56,1],[22,6,56,1,"_arrayLikeToArray"],[22,23,56,1],[22,26,56,1,"_interopDefault"],[22,41,56,1],[22,42,56,1,"_babelRuntimeHelpersArrayLikeToArray"],[22,78,56,1],[23,2,56,1],[23,6,56,1,"_babelRuntimeHelpersToArray"],[23,33,56,1],[23,36,56,1,"require"],[23,43,56,1],[23,44,56,1,"_dependencyMap"],[23,58,56,1],[24,2,56,1],[24,6,56,1,"_toArray"],[24,14,56,1],[24,17,56,1,"_interopDefault"],[24,32,56,1],[24,33,56,1,"_babelRuntimeHelpersToArray"],[24,60,56,1],[25,2,2,0],[25,6,2,0,"_common"],[25,13,2,0],[25,16,2,0,"require"],[25,23,2,0],[25,24,2,0,"_dependencyMap"],[25,38,2,0],[26,2,4,0],[26,6,4,0,"_easing"],[26,13,4,0],[26,16,4,0,"require"],[26,23,4,0],[26,24,4,0,"_dependencyMap"],[26,38,4,0],[27,2,9,0],[27,6,9,0,"_utils"],[27,12,9,0],[27,15,9,0,"require"],[27,22,9,0],[27,23,9,0,"_dependencyMap"],[27,37,9,0],[28,2,28,7],[28,6,28,13,"createEmptyTransitionConfig"],[28,33,28,40],[28,36,29,2,"createEmptyTransitionConfig"],[28,37,29,2],[28,43,29,48],[29,4,30,4,"transitionProperty"],[29,22,30,22],[29,24,30,24],[29,26,30,26],[30,4,31,4,"transitionDuration"],[30,22,31,22],[30,24,31,24],[30,26,31,26],[31,4,32,4,"transitionTimingFunction"],[31,28,32,28],[31,30,32,30],[31,32,32,32],[32,4,33,4,"transitionDelay"],[32,19,33,19],[32,21,33,21],[32,23,33,23],[33,4,34,4,"transitionBehavior"],[33,22,34,22],[33,24,34,24],[34,2,35,2],[34,3,35,3],[34,4,35,4],[35,2,37,7],[35,11,37,16,"parseTransitionShorthand"],[35,35,37,40,"parseTransitionShorthand"],[35,36,37,41,"value"],[35,41,37,54],[35,43,37,56],[36,4,38,2],[36,11,38,9],[36,15,38,9,"splitByComma"],[36,21,38,21],[36,22,38,21,"splitByComma"],[36,34,38,21],[36,36,38,22,"value"],[36,41,38,27],[36,42,38,28],[36,43,38,29,"reduce"],[36,49,38,35],[36,50,39,4],[36,51,39,5,"acc"],[36,54,39,8],[36,56,39,10,"part"],[36,60,39,14],[36,65,39,19],[37,6,40,6],[37,10,40,12,"result"],[37,16,40,18],[37,19,40,21],[37,23,40,21,"parseSingleTransitionShorthand"],[37,29,40,51],[37,30,40,51,"parseSingleTransitionShorthand"],[37,60,40,51],[37,62,40,52,"part"],[37,66,40,56],[37,67,40,57],[38,6,41,6,"acc"],[38,9,41,9],[38,10,41,10,"transitionProperty"],[38,28,41,28],[38,29,41,29,"push"],[38,33,41,33],[38,34,42,8],[38,38,42,8,"camelizeKebabCase"],[38,44,42,25],[38,45,42,25,"camelizeKebabCase"],[38,62,42,25],[38,64,42,26,"result"],[38,70,42,32],[38,71,42,33,"transitionProperty"],[38,89,42,51],[38,93,42,55],[38,98,42,60],[38,99,43,6],[38,100,43,7],[39,6,44,6,"acc"],[39,9,44,9],[39,10,44,10,"transitionDuration"],[39,28,44,28],[39,29,44,29,"push"],[39,33,44,33],[39,34,44,34,"result"],[39,40,44,40],[39,41,44,41,"transitionDuration"],[39,59,44,59],[39,60,44,60],[40,6,45,6,"acc"],[40,9,45,9],[40,10,45,10,"transitionTimingFunction"],[40,34,45,34],[40,35,45,35,"push"],[40,39,45,39],[40,40,46,8,"result"],[40,46,46,14],[40,47,46,15,"transitionTimingFunction"],[40,71,46,39],[40,74,47,12,"parseTimingFunction"],[40,93,47,31],[40,94,47,32,"result"],[40,100,47,38],[40,101,47,39,"transitionTimingFunction"],[40,125,47,63],[40,126,47,64],[40,129,48,12,"undefined"],[40,138,49,6],[40,139,49,7],[41,6,50,6,"acc"],[41,9,50,9],[41,10,50,10,"transitionDelay"],[41,25,50,25],[41,26,50,26,"push"],[41,30,50,30],[41,31,50,31,"result"],[41,37,50,37],[41,38,50,38,"transitionDelay"],[41,53,50,53],[41,54,50,54],[42,6,51,6,"acc"],[42,9,51,9],[42,10,51,10,"transitionBehavior"],[42,28,51,28],[42,29,51,29,"push"],[42,33,51,33],[42,34,51,34,"result"],[42,40,51,40],[42,41,51,41,"transitionBehavior"],[42,59,51,59],[42,60,51,60],[43,6,52,6],[43,13,52,13,"acc"],[43,16,52,16],[44,4,53,4],[44,5,53,5],[44,7,54,4,"createEmptyTransitionConfig"],[44,34,54,31],[44,35,54,32],[44,36,55,2],[44,37,55,3],[45,2,56,0],[46,2,58,0],[46,11,58,9,"asControlPoint"],[46,25,58,23,"asControlPoint"],[46,26,58,24,"value"],[46,31,58,39],[46,33,58,62],[47,4,59,2],[47,8,59,2,"_value"],[47,14,59,2],[47,21,59,2,"_toArray"],[47,29,59,2],[47,30,59,2,"default"],[47,37,59,2],[47,39,59,27,"value"],[47,44,59,32],[48,6,59,9,"first"],[48,11,59,14],[48,14,59,14,"_value"],[48,20,59,14],[49,6,59,19,"rest"],[49,10,59,23],[49,17,59,23,"_arrayLikeToArray"],[49,34,59,23],[49,35,59,23,"default"],[49,42,59,23],[49,44,59,23,"_value"],[49,50,59,23],[49,52,59,23,"slice"],[49,57,59,23],[50,4,60,2],[50,8,60,6],[50,9,60,7,"first"],[50,14,60,12],[50,18,60,16,"isNaN"],[50,23,60,21],[50,24,60,22,"Number"],[50,30,60,28],[50,31,60,29,"first"],[50,36,60,34],[50,37,60,35],[50,38,60,36],[50,42,60,40],[50,43,60,41,"rest"],[50,47,60,45],[50,48,60,46,"every"],[50,53,60,51],[50,54,60,52,"isPercentage"],[50,60,60,64],[50,61,60,64,"isPercentage"],[50,73,60,64],[50,74,60,65],[50,76,60,67],[51,6,61,4],[51,13,61,11],[51,17,61,15],[52,4,62,2],[53,4,63,2],[53,11,63,9],[53,12,63,10,"Number"],[53,18,63,16],[53,19,63,17,"first"],[53,24,63,22],[53,25,63,23],[53,27,63,25],[53,30,63,28,"rest"],[53,34,63,32],[53,35,63,33],[54,2,64,0],[55,2,66,0],[55,11,66,9,"parseTimingFunction"],[55,30,66,28,"parseTimingFunction"],[55,31,66,29,"value"],[55,36,66,42],[55,38,66,63],[56,4,67,2],[56,8,67,6],[56,12,67,6,"isPredefinedTimingFunction"],[56,18,67,32],[56,19,67,32,"isPredefinedTimingFunction"],[56,45,67,32],[56,47,67,33,"value"],[56,52,67,38],[56,53,67,39],[56,55,67,41],[57,6,68,4],[57,13,68,11,"value"],[57,18,68,16],[58,4,69,2],[60,4,71,2],[61,4,72,2],[61,8,72,8,"regex"],[61,13,72,13],[61,16,72,16],[61,32,72,32],[62,4,73,2],[62,8,73,6],[62,9,73,7,"regex"],[62,14,73,12],[62,15,73,13,"test"],[62,19,73,17],[62,20,73,18,"value"],[62,25,73,23],[62,26,73,24],[62,28,73,26],[63,6,74,4],[63,12,74,10],[63,16,74,14,"ReanimatedError"],[63,23,74,29],[63,24,74,29,"ReanimatedError"],[63,39,74,29],[63,40,74,30],[63,72,74,62,"value"],[63,77,74,67],[63,79,74,69],[63,80,74,70],[64,4,75,2],[65,4,77,2],[65,8,77,2,"_ref"],[65,12,77,2],[65,15,77,25,"value"],[65,20,77,30],[65,21,77,31,"match"],[65,26,77,36],[65,27,77,37,"regex"],[65,32,77,42],[65,33,77,43],[66,6,77,43,"_ref2"],[66,11,77,43],[66,18,77,43,"_slicedToArray"],[66,32,77,43],[66,33,77,43,"default"],[66,40,77,43],[66,42,77,43,"_ref"],[66,46,77,43],[67,6,77,11,"name"],[67,10,77,15],[67,13,77,15,"_ref2"],[67,18,77,15],[68,6,77,17,"args"],[68,10,77,21],[68,13,77,21,"_ref2"],[68,18,77,21],[69,4,78,2],[69,8,78,8,"parsedArgs"],[69,18,78,18],[69,21,78,21],[69,25,78,21,"splitByComma"],[69,31,78,33],[69,32,78,33,"splitByComma"],[69,44,78,33],[69,46,78,34,"args"],[69,50,78,38],[69,51,78,39],[70,4,80,2],[70,12,80,10,"name"],[70,16,80,14],[71,6,81,4],[71,11,81,9],[71,25,81,23],[72,8,81,25],[73,10,82,6],[73,14,82,12,"numberArgs"],[73,24,82,22],[73,27,82,25,"parsedArgs"],[73,37,82,35],[73,38,82,36,"map"],[73,41,82,39],[73,42,82,40,"Number"],[73,48,82,46],[73,49,82,47],[74,10,83,6],[74,14,84,8],[74,18,84,8,"isArrayOfLength"],[74,24,84,23],[74,25,84,23,"isArrayOfLength"],[74,40,84,23],[74,42,84,24,"numberArgs"],[74,52,84,34],[74,54,84,36],[74,55,84,37],[74,56,84,38],[74,60,85,8,"numberArgs"],[74,70,85,18],[74,71,85,19,"every"],[74,76,85,24],[74,77,85,26,"n"],[74,78,85,27],[74,82,85,32],[74,83,85,33,"isNaN"],[74,88,85,38],[74,89,85,39,"n"],[74,90,85,40],[74,91,85,41],[74,92,85,42],[74,94,86,8],[75,12,87,8],[75,19,87,15],[75,23,87,15,"cubicBezier"],[75,30,87,26],[75,31,87,26,"cubicBezier"],[75,42,87,26],[75,44,87,27],[75,47,87,30,"numberArgs"],[75,57,87,40],[75,58,87,41],[76,10,88,6],[77,10,89,6],[78,8,90,4],[79,6,91,4],[79,11,91,9],[79,19,91,17],[80,8,91,19],[81,10,92,6],[81,14,92,12,"controlPoints"],[81,27,92,25],[81,30,92,28,"parsedArgs"],[81,40,92,38],[81,41,92,39,"map"],[81,44,92,42],[81,45,92,44,"arg"],[81,48,92,47],[81,52,92,52],[82,12,93,8],[82,16,93,14,"parts"],[82,21,93,19],[82,24,93,22],[82,28,93,22,"splitByWhitespace"],[82,34,93,39],[82,35,93,39,"splitByWhitespace"],[82,52,93,39],[82,54,93,40,"arg"],[82,57,93,43],[82,58,93,44],[83,12,94,8],[83,16,94,14,"controlPoint"],[83,28,94,26],[83,31,94,29,"asControlPoint"],[83,45,94,43],[83,46,94,44,"parts"],[83,51,94,49],[83,52,94,50],[84,12,95,8],[84,16,95,12],[84,17,95,13,"controlPoint"],[84,29,95,25],[84,31,95,27],[85,14,96,10],[85,20,96,16],[85,24,96,20,"ReanimatedError"],[85,31,96,35],[85,32,96,35,"ReanimatedError"],[85,47,96,35],[85,48,97,12],[85,74,97,38,"arg"],[85,77,97,41],[85,84,97,48,"value"],[85,89,97,53],[85,107,98,10],[85,108,98,11],[86,12,99,8],[87,12,100,8],[87,19,100,15,"controlPoint"],[87,31,100,27],[88,10,101,6],[88,11,101,7],[88,12,101,8],[89,10,102,6],[89,17,102,13],[89,21,102,13,"linear"],[89,28,102,19],[89,29,102,19,"linear"],[89,35,102,19],[89,37,102,20],[89,40,102,23,"controlPoints"],[89,53,102,36],[89,54,102,37],[90,8,103,4],[91,6,104,4],[91,11,104,9],[91,18,104,16],[92,8,104,18],[93,10,105,6],[93,14,105,12,"stepsNumber"],[93,25,105,23],[93,28,105,26,"Number"],[93,34,105,32],[93,35,105,33,"parsedArgs"],[93,45,105,43],[93,46,105,44],[93,47,105,45],[93,48,105,46],[93,49,105,47],[94,10,106,6],[94,14,106,12,"stepsModifier"],[94,27,106,25],[94,30,106,28,"parsedArgs"],[94,40,106,38],[94,41,106,39],[94,42,106,40],[94,43,106,41],[95,10,107,6],[95,14,108,8],[95,15,108,9,"isNaN"],[95,20,108,14],[95,21,108,15,"stepsNumber"],[95,32,108,26],[95,33,108,27],[95,37,109,8,"stepsNumber"],[95,48,109,19],[95,51,109,22],[95,52,109,23],[95,57,110,9,"stepsModifier"],[95,70,110,22],[95,75,110,27,"undefined"],[95,84,110,36],[95,88,110,40],[95,92,110,40,"isStepsModifier"],[95,98,110,55],[95,99,110,55,"isStepsModifier"],[95,114,110,55],[95,116,110,56,"stepsModifier"],[95,129,110,69],[95,130,110,70],[95,131,110,71],[95,133,111,8],[96,12,112,8],[96,19,112,15],[96,23,112,15,"steps"],[96,30,112,20],[96,31,112,20,"steps"],[96,36,112,20],[96,38,112,21,"stepsNumber"],[96,49,112,32],[96,51,112,34,"stepsModifier"],[96,64,112,47],[96,65,112,48],[97,10,113,6],[98,10,114,6],[99,8,115,4],[100,4,116,2],[101,4,118,2],[101,10,118,8],[101,14,118,12,"ReanimatedError"],[101,21,118,27],[101,22,118,27,"ReanimatedError"],[101,37,118,27],[101,38,118,28],[101,66,118,56,"value"],[101,71,118,61],[101,73,118,63],[101,74,118,64],[102,2,119,0],[103,0,119,1],[103,3]],"functionMap":{"names":["<global>","createEmptyTransitionConfig","parseTransitionShorthand","splitByComma.reduce$argument_0","asControlPoint","parseTimingFunction","numberArgs.every$argument_0","parsedArgs.map$argument_0"],"mappings":"AAA;EC4B;IDM;OEE;ICE;KDc;CFG;AIE;CJM;AKE;yBCmB,gBD;2CEO;OFS;CLkB"},"hasCjsExports":false},"type":"js/module"}]}